# No care so far for secrets (mongodb password, etc)

server:
  contextRoot: /fe
  db:
    type: 1 # 0: in-memory, 1: mongodb
    mongodb:
      url: mongodb://fe-server-mongodb-headless:27017/go_db?replicaSet=rs_fe&w=1
      user: go_user
      password: go_password
  otlp:
    enabled: true
    endpoint: http://fe-server-zipkin:9411/api/v2/spans

replicaCount: 1

image:
  repository: g-fe-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: 'true'
podLabels:
  app.kubernetes.io/name: g-fe-server
  app.kubernetes.io/managed-by: Helm
  app.kubernetes.io/component: presentation-server

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8080

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 32Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

mongodb:
  architecture: replicaset
  replicaCount: 2
  auth:
    replicaSetKey: whatever
    rootPassword: root
    usernames:
      - go_user
    passwords:
      - go_password
    databases:
      - go_db
  replicaSetName: rs_fe
  initdbScripts:
    000-init-go_db.js: |
      use go_db;
      db.createCollection('examples', {});
      db.examples.createIndex({ name: 1 }, { unique: true });

prometheus:
  enabled: false
  server:
    enableFeatures:
      - otlp-write-receiver
    extraScrapeConfigs:
      - job_name: 'g-fe-server'
        kubernetes_sd_configs:
          - role: pod
